@using Application.ViewModels
@using Application.ViewModels.IndexViewModels
@using Web.Helpers

@model IndexViewModel<IndexTariffViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<h4>Page: @Model.PageViewModel.PageNumber / @Model.PageViewModel.TotalPages</h4>

@await Html.PartialAsync("_IndexPagesButtons", Model.PageViewModel)
@await Html.PartialAsync("_FilterForIndexPages", Model.PageViewModel)

<table class="table">
    <thead>
        <tr>
            <th>
                @await Html.PartialAsync("_ChangeTableOrder", ("Name", Model.PageViewModel, ViewBag.NameSort))
            </th>
            <th>
                @await Html.PartialAsync("_ChangeTableOrder", ("Cost", Model.PageViewModel, ViewBag.CostSort))
            </th>
            <th>
                @await Html.PartialAsync("_ChangeTableOrder", ("MbCost", Model.PageViewModel, ViewBag.MbCostSort))
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Data)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MbCost)
                </td>
                <td>
                    @await Html.PartialAsync("_ActionsForRowsOnIndexPages", item.Id)
                </td>
            </tr>
        }
    </tbody>
</table>
